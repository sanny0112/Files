#include "stdafx.h"
#include <string.h>
#include <iostream>

const int S_SIZE=8, C_SIZE=3, R_SIZE=18;

struct TStudents {
	int SNum;
	char SName[16];
	char SGroup[7];
};

struct TCourses {
	int CNum;
	char Course[16];
	int Size;
};

struct TRegister {
	int SNum;
	int CNum;
	int Score;
};

typedef TStudents TStudTable[S_SIZE];
typedef TCourses TCoursTable[C_SIZE];
typedef TRegister TRegTable[R_SIZE];

void StudentsList(TStudTable Stud, int NS, TRegTable Reg, int NR);
bool checkScore(int SNum, TRegTable Reg, int N, int NumberCourses);
void SortStudents(TStudTable A, TStudTable B, int N);
void PrintStudents(TStudTable Stud, int N);
void PrintCourses(TCoursTable Cours, int N);
void PrintRegister(TRegTable Reg, int N);

int main() {
	setlocale(LC_ALL, "Russian");

	TStudTable StudTable={{576,"Петров","КЭ-118"},{237,"Дятлов","КЭ-119"},{912,"Канаева","КЭ-108"},{344,"Васильев","КЭ-118"},{58,"Яшин","КЭ-119"},{777,"Костылев","КЭ-108"},{114,"Трушин","КЭ-118"},{848,"Серова","КЭ-107"}};
	TCoursTable CoursTable={{1,"Алгебра",36},{3,"Начерт. геом.",28},{6,"Языки прог.",32}};
	TRegTable RegTable={{912,1,3},{912,3,4},{777,6,5},{237,6,5},{576,6,5},{777,1,5},{344,6,5},{58,1,5},{114,3,5},{114,6,5},{114,1,5},{344,3,5},{58,6,5},{344,1,5},{777,3,5},{576,1,5},{237,1,5},{576,3,5}};

	PrintStudents(StudTable, S_SIZE);
	PrintCourses(CoursTable, C_SIZE);
	PrintRegister(RegTable, R_SIZE);
	TStudTable SortStudTable;
	SortStudents(StudTable, SortStudTable, S_SIZE); 
	StudentsList(SortStudTable, S_SIZE, RegTable, R_SIZE);
	system("pause");
}

void StudentsList(TStudTable Stud, int NS, TRegTable Reg, int NR) {
    int i,j,k=0;
    printf("************[ ОТЛИЧНИКИ ]***********\n");
    printf("* S_ID *     Фамилия     *  Группа *\n");
    printf("************************************\n");
    for (i=0; i<NS; i++) {
        if (i > 0 && strcmp(Stud[i].SGroup,Stud[i-1].SGroup) != 0) {
            if (k == 0)
                printf("*  В группе %6s нет отличников  *\n", Stud[i-1].SGroup);
            printf("************************************\n");
			k=0;
        }
        if (checkScore(Stud[i].SNum, Reg, NR, C_SIZE)) {
            k++;
            printf("* %4i * %15s * %7s *\n",Stud[i].SNum,Stud[i].SName,Stud[i].SGroup);
        }
    }
    if (k == 0)
        printf("*  В группе %6s нет отличников  *\n", Stud[i-1].SGroup);
    printf("************************************\n");
}

bool checkScore(int SNum, TRegTable Reg, int N, int NumberCourses) {
    bool f = true;
    int k=0;
    for (int i=0; i<N; i++)
        if (SNum == Reg[i].SNum) {
            k++;
            if (Reg[i].Score != 5) {
                f = false;
                break;
            }
        }
    if (NumberCourses != k)
        f = false;
    return f;
}

void SortStudents(TStudTable A, TStudTable B, int N) {
    bool f;
    TStudents Temp;
    for (int i=0; i<N; i++)
        B[i] = A[i];
    do {
        f = false;
        for (int i=0; i<N-1; i++)
            if (strcmp(B[i].SGroup,B[i+1].SGroup) > 0) {
                Temp = B[i];
                B[i] = B[i+1];
                B[i+1] = Temp;
                f = true;
            }
        N--;
    } while (f);
}

void PrintStudents(TStudTable Stud, int N) {
	printf("************************************\n");
	printf("* S_ID *     Фамилия     *  Группа *\n");
	printf("************************************\n");
	for (int i=0; i<N; i++)
		printf("* %4i * %15s * %7s *\n",Stud[i].SNum,Stud[i].SName,Stud[i].SGroup);
	printf("************************************\n\n");
}

void PrintCourses(TCoursTable Cours, int N) {
	printf("************************************\n");
	printf("* C_ID *     Название    * Объём,ч *\n");
	printf("************************************\n");
	for (int i=0; i<N; i++)
		printf("* %4i * %15s * %7i *\n",Cours[i].CNum,Cours[i].Course,Cours[i].Size);
	printf("************************************\n\n");
}

void PrintRegister(TRegTable Reg, int N) {
	printf("************************************\n");
	printf("* S_ID *   Номер курса   *  Оценка *\n");
	printf("************************************\n");
	for (int i=0; i<N; i++)
		printf("* %4i * %15i * %7i *\n",Reg[i].SNum,Reg[i].CNum,Reg[i].Score);
	printf("************************************\n\n");
}
